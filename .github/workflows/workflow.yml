name: Demo Workflow

on:
  push:
    branches: [ "open" ]
  pull_request:
    branches: [ "open" ]

env:
  BUILDER_DOCKER_NAME: "af2-web-runtime-builder"
  BUILDER_DOCKER_NAME_14: "af2-web-runtime-builder_14"
  DOCKERCOMMAND: "docker run -u `id -u` --rm -v `pwd`:/app $BUILDER_DOCKER_NAME sh -c "
  DOCKER14COMMAND: "docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c "
jobs:
  buildProject:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14, latest ]
    steps:
    - name: list event
      run: more $GITHUB_EVENT_PATH    
    - name: checkout branch
      uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.3.0
      with:
          node-version: ${{ matrix.node }}
    - uses: actions/setup-java@v3
      with:
         distribution: 'zulu' # See 'Supported distributions' for available options
         java-version: '11'      
#     - name: build - environment
#       run: |
#        sudo docker build -t $BUILDER_DOCKER_NAME -f Dockerfile.build.mt .
#       sudo docker build -t $BUILDER_DOCKER_NAME_14 -f Dockerfile_14.build.mt .
#     - name: test-node14
#       run: |
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npm ci'
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npx lerna bootstrap --ci --hoist --strict'
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npx lerna run build'
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npx lerna run test'
    - name: test-with-node-14
      run: |
          npm config set unsafe-perm true
          npm -v
#          npx lerna bootstrap --ci --strict
#         npm ci --ignore-scripts
         
#         npx lerna run build
#         npx lerna run test
#         npx lerna run clean
#         rm -rf node_modules packages/*/node_modules
#         echo ${{matrix.node}}
      if: ${{matrix.node==14}}
    - name: build-package-with-latest-node
      run: |
        npm config set unsafe-perm true
        echo "http://dl-cdn.alpinelinux.org/alpine/edge/main">/etc/apk/repositories
        echo"http://dl-cdn.alpinelinux.org/alpine/edge/community">>/etc/apk/repositories
        echo"http://dl-cdn.alpinelinux.org/alpine/edge/testing">>/etc/apk/repositories
        echo"http://dl-cdn.alpinelinux.org/alpine/v3.12/main">>/etc/apk/repositories
        apk upgrade -U -a
        apk add
        libstdc++
        chromium
        harfbuzz
        nss
        freetype
        ttf-freefont
        font-noto-emoji
        wqy-zenhei
        rm-rf /var/cache/*
        mkdir /var/cache/apk
        npm install-g npm@latest 
        npm install -g @lhci/cli@0.8.x
        npm ci
        npx lerna bootstrap --ci --strict
        npx lerna run build
      if: ${{matrix.node=='latest'}}
    - name: test-with-latest
      run: |
       npx lerna run test:ci
       junit "packages/forms-next-core/target/test-reports/junit.xml"
       junit "packages/forms-next-react-core-components/target/test-reports/junit.xml"
       junit "packages/react-bindings/target/test-reports/junit.xml"
      if: ${{matrix.node=='latest'}}       
