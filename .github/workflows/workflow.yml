name: Demo Workflow

on:
  push:
    branches: [ "open" ]
  pull_request:
    branches: [ "open","main" ]

jobs:
  buildProject:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 14, latest ]
    steps:
    - name: list event
      run: more $GITHUB_EVENT_PATH    
    - name: checkout branch
      uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.3.0
      with:
          node-version: ${{ matrix.node }}
    - name: setup python
      uses: actions/setup-python@v4
      with:
       python-version: '3.x'
    - uses: actions/setup-java@v3
      with:
         distribution: 'zulu' # See 'Supported distributions' for available options
         java-version: '11'      
#     - name: build - environment
#       run: |
#        sudo docker build -t $BUILDER_DOCKER_NAME -f Dockerfile.build.mt .
#       sudo docker build -t $BUILDER_DOCKER_NAME_14 -f Dockerfile_14.build.mt .
#     - name: test-node14
#       run: |
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npm ci'
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npx lerna bootstrap --ci --hoist --strict'
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npx lerna run build'
#        docker run --rm -v `pwd`:/app $BUILDER_DOCKER_NAME_14 sh -c 'npx lerna run test'
    - name: test-with-node-14
      run: |
       echo ${{matrix.node}}
       npm config set unsafe-perm true
       npm ci --ignore-scripts
       npx lerna bootstrap --ci --strict
       npx lerna run build
       npx lerna run test --passWithNoTests
       npx lerna run clean
       rm -rf node_modules packages/*/node_modules
      if: ${{matrix.node==14}}
    - name: build-package-with-latest-node
      run: |
        npm ci
        npx lerna bootstrap --ci --strict
        npx lerna run build
      if: ${{matrix.node=='latest'}}
    - name: test-with-latest
      run: |
       npx lerna run test:ci
      if: ${{matrix.node=='latest'}}
    - name: diff-coverage
      if: ${{github.event_name == 'pull_request' && matrix.node=='latest'}}
      run: |
        pip install diff-cover
        git fetch --no-tags --depth=500 origin main
        git fetch --no-tags --depth=500 origin open
        diff-cover --html-report packages/aem-forms-af-core/target/coverage/diff-cover.html --compare-branch origin/${{github.event.pull_request.base.ref}} packages/aem-forms-af-core/target/coverage/cobertura-coverage.xml --fail-under=90
        diff-cover --html-report packages/aem-forms-af-react-components/target/coverage/diff-cover.html --compare-branch origin/${{github.event.pull_request.base.ref}} packages/aem-forms-af-react-components/target/coverage/cobertura-coverage.xml --fail-under=90

#        diff-cover --html-report packages/forms-next-core/target/coverage/diff-cover.html --compare-branch ${{github.event.pull_request.base.ref}} packages/forms-next-core/target/coverage/cobertura-coverage.xml --fail-under=90
     
      
      
